{
  "compilerOptions": {
      /* Base Options: */
      "esModuleInterop": true,
      "skipLibCheck": true,
      "target": "es2022",
      "verbatimModuleSyntax": true,
      "allowJs": true,
      "resolveJsonModule": true,
      "moduleDetection": "force",
      // where it will start to search files in your code (if "./" it is where tsconfig.json is)
      // "baseUrl": "./",
      // alias for paths in your code
      "paths": {
       "@/*": ["./server/*"]
      },
      // if true your code will not be transpiled to older js runtime
      // "downlevelIteration": true,
      "allowImportingTsExtensions": false,
      /* jsx tells typescript compiler to transpile JSX into Javascript that React can understand */
      /* preserve: will keep jsx part to be consummed later (product .jsx files) / react: will emit a .js file who does not need a futur transformation */
      /* react-native: same as preserve but files will have .js extension */
      /* react-jsx: (relevant for React 17) avoid the necessity of importing React in every file where jsx is used (only for emit not checking) */
      "jsx": "react",

      /* Strictness */
      "strict": true,
      // prevents you from accessing an array or object without first checking if it's defined
      "noUncheckedIndexedAccess": true,
      /* if true you can import default from a module that doesn't have a default export */
      // "allowSyntheticDefaultImports": true,
      /* check a return is for sure returned */
      "noImplicitReturns": true,
      // prevent using wrong casing naming files for system with case sensitive (linux)
      "forceConsistentCasingInFileNames": true,
      "noImplicitAny": true,
      /* ensures that a case have a return / throw / break */
      "noFallthroughCasesInSwitch": true,
      "noUnusedParameters": true,
      "noUnusedLocals": true,

      /* if transpiling with TypeScript: */
      // "module": "nodenext",
      // "outDir": "dist",
      // "sourceMap": true,
      /* where the compiler will output the files after outdir name (base . if composite true) */
      // "rootDir": ".",

      /* if NOT transpiling with TypeScript: */    
      // moduleResolution is now implied by module
      "module": "preserve",
      "noEmit": true,

      /* if your code runs in the DOM: */
      // "lib": ["es2022", "dom", "dom.iterable"],

      /* if your code doesn't run in the DOM: */
      "lib": ["es2022"],

      /* if you're building for a library emit all declalarion .ts files associated to the js file (is true if composite is true) */
      "declaration": true,

      /* if you're building for a library in a monorepo (large repo) */
      "composite": true,
      // will redirect you to the source file instead of the reference file when searching the source
      "declarationMap": true,

      "types": [
        "bun-types" // add Bun types global
      ] 
    },
  
    /* where all files ts to CHECK are located */
    "include": ["./*.ts", "./src"],
    "exclude": ["node_modules"]

    // Reference files (.d.ts ?) generated from other tsconfigs
    //   "references": [
    //     { "path": "./ref_to_another_tsconfig_file" }
    // ]
}
